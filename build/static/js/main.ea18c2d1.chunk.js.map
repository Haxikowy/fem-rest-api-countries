{"version":3,"sources":["history.js","components/Header.js","apis/restCountries.js","actions/types.js","actions/index.js","components/CountriesList/SearchInput.js","components/CountriesList/Dropdown.js","components/CountriesList/Loader.js","components/CountriesList/CountryCard.js","components/CountriesList/index.js","components/CountryDetails/Detail.js","components/CountryDetails/TopLevelDomain.js","components/CountryDetails/Currencies.js","components/CountryDetails/Languages.js","components/CountryDetails/Borders.js","components/CountryDetails/index.js","components/App.js","reducers/countryReducer.js","reducers/termReducer.js","reducers/selectedReducer.js","reducers/renderedReducer.js","reducers/index.js","index.js"],"names":["createHashHistory","Header","props","className","to","onClick","setTheme","theme","icon","restCountries","axios","create","baseURL","FETCH_COUNTRIES","SET_TERM","SELECT_REGION","SET_RENDERED","RESET_RENDERED","fetchCountries","dispatch","a","get","data","type","payload","connect","state","term","setTerm","htmlFor","autoComplete","id","onChange","e","target","value","placeholder","regions","name","selectedRegion","selectRegion","selected","resetRendered","useState","active","setActive","showDropdown","ref","useRef","useEffect","onBodyClick","current","contains","document","body","addEventListener","capture","removeEventListener","tabIndex","onKeyPress","key","map","region","i","Loader","CountryCard","onLoad","isLoaded","setLoaded","population","replace","alpha3Code","style","width","height","display","src","flag","alt","capital","countries","Object","values","rendered","setRendered","addition","footerRef","handleScroll","window","scrollY","innerHeight","offsetTop","length","_","isEmpty","result","filter","country","toLowerCase","includes","slice","renderCards","padding","Detail","label","undefined","TopLevelDomain","join","Currencies","currency","Languages","language","Borders","borders","border","borderCountry","find","ownProps","match","params","setIsLoaded","history","goBack","nativeName","subregion","topLevelDomain","currencies","languages","renderContent","App","matchMedia","matches","containerClassName","path","exact","component","CountriesList","CountryDetails","countryReducer","action","mapKeys","termReducer","selectedReducer","renderedReducer","combineReducers","composeEnchancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ea18c2d1.chunk.js","sourcesContent":["import { createHashHistory } from 'history';\n\nexport default createHashHistory();\n","import './scss/Header.scss';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { solid } from '@fortawesome/fontawesome-svg-core/import.macro';\n\nconst Header = props => {\n  const renderButtonText = () => {\n    if (props.theme) {\n      return (\n        <>\n          <FontAwesomeIcon icon={solid('moon')} />\n          Dark Mode\n        </>\n      );\n    } else if (!props.theme) {\n      return (\n        <>\n          <FontAwesomeIcon icon={solid('sun')} />\n          Light Mode\n        </>\n      );\n    }\n  };\n\n  return (\n    <header className=\"header\">\n      <div className=\"wrapper\">\n        <Link to=\"/\" className=\"header__logo\">\n          Where in the world?\n        </Link>\n        <button\n          onClick={() => props.setTheme(!props.theme)}\n          className=\"header__theme-switch\">\n          {renderButtonText()}\n        </button>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import axios from 'axios';\n\nconst restCountries = axios.create({ baseURL: 'https://restcountries.com/v2' });\n\nexport default restCountries;\n","export const FETCH_COUNTRIES = 'FETCH_COUNTRIES';\nexport const SET_TERM = 'SET_TERM';\nexport const SELECT_REGION = 'SELECT_REGION';\nexport const SET_RENDERED = 'SET_RENDERED';\nexport const RESET_RENDERED = 'RESET_RENDERED';\n","import restCountries from '../apis/restCountries';\nimport {\n  FETCH_COUNTRIES,\n  SET_TERM,\n  SELECT_REGION,\n  SET_RENDERED,\n  RESET_RENDERED,\n} from './types';\n\nexport const fetchCountries = () => async dispatch => {\n  const { data } = await restCountries.get('/all');\n\n  return dispatch({ type: FETCH_COUNTRIES, payload: data });\n};\n\nexport const setTerm = term => {\n  return { type: SET_TERM, payload: term };\n};\n\nexport const selectRegion = selected => {\n  return { type: SELECT_REGION, payload: selected };\n};\n\nexport const setRendered = addition => {\n  return { type: SET_RENDERED, payload: addition };\n};\n\nexport const resetRendered = () => {\n  return { type: RESET_RENDERED };\n};\n","import '../scss/SearchInput.scss';\nimport React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { solid } from '@fortawesome/fontawesome-svg-core/import.macro';\n\nimport { connect } from 'react-redux';\nimport { setTerm } from '../../actions';\n\nconst SearchInput = ({ term, setTerm }) => {\n  return (\n    <div className=\"search-input\">\n      <label htmlFor=\"input\">\n        <FontAwesomeIcon className=\"icon\" icon={solid('search')} />\n      </label>\n      <input\n        autoComplete=\"off\"\n        id=\"input\"\n        onChange={e => setTerm(e.target.value)}\n        placeholder={'Search for a country...'}\n        value={term}\n        type=\"text\"\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return { term: state.term };\n};\n\nexport default connect(mapStateToProps, { setTerm })(SearchInput);\n","import '../scss/Dropdown.scss';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { solid } from '@fortawesome/fontawesome-svg-core/import.macro';\nimport { connect } from 'react-redux';\nimport { selectRegion, resetRendered } from '../../actions';\n\nconst regions = [\n  { name: 'Filter by Region', value: '' },\n  { name: 'Africa', value: 'Africa' },\n  { name: 'America', value: 'Americas' },\n  { name: 'Asia', value: 'Asia' },\n  { name: 'Europe', value: 'Europe' },\n  { name: 'Oceania', value: 'Oceania' },\n];\n\nconst Dropdown = ({ selectedRegion, selectRegion, resetRendered }) => {\n  const [active, setActive] = useState(false);\n  const showDropdown = active ? 'active' : '';\n  const ref = useRef();\n\n  useEffect(() => {\n    const onBodyClick = e => {\n      if (ref.current.contains(e.target)) {\n        return;\n      }\n\n      setActive(false);\n    };\n\n    selectRegion(regions[0]);\n    document.body.addEventListener('click', onBodyClick, { capture: true });\n\n    return () => {\n      document.body.removeEventListener('click', onBodyClick, {\n        capture: true,\n      });\n    };\n  }, [selectRegion]);\n\n  const renderList = () => {\n    return regions.map((region, i) => {\n      if (region.value === selectedRegion.value) return null;\n      return (\n        <li\n          tabIndex=\"0\"\n          onKeyPress={e => {\n            if (e.key === 'Enter') {\n              selectRegion(region);\n              resetRendered();\n            }\n          }}\n          onClick={() => {\n            selectRegion(region);\n            resetRendered();\n          }}\n          key={i}\n          className=\"dropdown__item\">\n          {region.name}\n        </li>\n      );\n    });\n  };\n\n  return (\n    <div\n      tabIndex=\"0\"\n      ref={ref}\n      onKeyPress={e => (e.key === 'Enter' ? setActive(!active) : null)}\n      onClick={() => setActive(!active)}\n      className={`dropdown ${showDropdown}`}>\n      <div className=\"dropdown__text\">\n        {selectedRegion.name}\n        <FontAwesomeIcon className=\"icon\" icon={solid('angle-down')} />\n      </div>\n      <ul className={`dropdown__list`}>{renderList()}</ul>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return { selectedRegion: state.selectedRegion };\n};\n\nexport default connect(mapStateToProps, { selectRegion, resetRendered })(\n  Dropdown\n);\n","import '../scss/Loader.scss';\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { solid } from '@fortawesome/fontawesome-svg-core/import.macro';\n\nconst Loader = () => {\n  return (\n    <div className=\"loader__container\">\n      <FontAwesomeIcon icon={solid('circle-notch')} className=\"loader\" />\n    </div>\n  );\n};\n\nexport default Loader;\n","import '../scss/CountryCard.scss';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Loader from './Loader';\n\nconst CountryCard = ({ data, onLoad }) => {\n  const [isLoaded, setLoaded] = useState(false);\n\n  const population = `${data.population}`.replace(\n    /(\\d)(?=(\\d\\d\\d)+(?!\\d))/g,\n    '$1,'\n  );\n\n  return (\n    <div className=\"country-card\">\n      <Link\n        tabIndex=\"-1\"\n        to={`/details/${data.alpha3Code}`}\n        className=\"country-card__flag\">\n        {isLoaded ? null : (\n          <Loader style={{ width: '250px', height: '166px' }} />\n        )}\n        <img\n          onLoad={() => setLoaded(!isLoaded)}\n          style={isLoaded ? {} : { display: 'none' }}\n          src={data.flag}\n          alt={`${data.name} flag`}\n        />\n      </Link>\n\n      <div className=\"country-card__informations\">\n        <Link to={`/details/${data.alpha3Code}`} className=\"country-card__name\">\n          {data.name}\n        </Link>\n        <p className=\"country-card__information\">\n          <span className=\"highlighted\">Population: </span>\n          {population}\n        </p>\n        <p className=\"country-card__information\">\n          <span className=\"highlighted\">Region: </span>\n          {data.region}\n        </p>\n        <p className=\"country-card__information\">\n          <span className=\"highlighted\">Capital: </span>\n          {data.capital}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default CountryCard;\n","import '../scss/CountriesList.scss';\nimport React, { useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCountries, setRendered } from '../../actions';\nimport _ from 'lodash';\n\nimport SearchInput from './SearchInput';\nimport Dropdown from './Dropdown';\nimport CountryCard from './CountryCard';\nimport Loader from './Loader';\n\nconst CountriesList = props => {\n  const {\n    fetchCountries,\n    setRendered,\n    rendered,\n    countries,\n    term,\n    selectedRegion,\n  } = props;\n  const footerRef = useRef();\n\n  useEffect(() => {\n    fetchCountries();\n  }, [fetchCountries]);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (!footerRef.current) return;\n\n      if (window.scrollY + window.innerHeight >= footerRef.current.offsetTop) {\n        if (rendered < 248) setRendered(19);\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [rendered, setRendered]);\n\n  const renderCards = () => {\n    if (countries.length <= 247 || _.isEmpty(selectedRegion)) {\n      return <Loader />;\n    }\n\n    let result = countries;\n    if (selectedRegion.value.length && term.length) {\n      result = countries.filter(\n        country =>\n          country.region === selectedRegion.value &&\n          country.name.toLowerCase().includes(term.toLowerCase())\n      );\n    } else if (selectedRegion.value.length) {\n      result = countries.filter(\n        country => country.region === selectedRegion.value\n      );\n    } else if (term.length) {\n      result = countries.filter(country =>\n        country.name.toLowerCase().includes(term.toLowerCase())\n      );\n    }\n    return result.slice(0, rendered).map(country => {\n      return <CountryCard key={country.alpha3Code} data={country} />;\n    });\n  };\n\n  return (\n    <div className=\"countries-list\">\n      <div className=\"countries-list__menu\">\n        <SearchInput />\n        <Dropdown />\n      </div>\n      <div className=\"countries-list__content\">{renderCards()}</div>\n      <footer ref={footerRef} style={{ padding: '2em' }}></footer>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    countries: Object.values(state.countries),\n    term: state.term,\n    selectedRegion: state.selectedRegion,\n    rendered: state.rendered,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchCountries, setRendered })(\n  CountriesList\n);\n","import React from 'react';\n\nconst Detail = ({ label, data }) => {\n  if (data === undefined) return null;\n\n  return (\n    <li className=\"country-details__item\">\n      <span className=\"highlighted\">{label}</span>\n      {data}\n    </li>\n  );\n};\n\nexport default Detail;\n","import React from 'react';\n\nconst TopLevelDomain = ({ label, data }) => {\n  if (data === undefined) return null;\n\n  return (\n    <li className=\"country-details__item\">\n      <span className=\"highlighted\">{label}</span>\n      {data.join`, `}\n    </li>\n  );\n};\n\nexport default TopLevelDomain;\n","import React from 'react';\n\nconst Currencies = ({ label, data }) => {\n  if (data === undefined) return null;\n\n  return (\n    <li className=\"country-details__item\">\n      <span className=\"highlighted\">{label}</span>\n      {data.map(currency => currency.name).join`, `}\n    </li>\n  );\n};\n\nexport default Currencies;\n","import React from 'react';\n\nconst Languages = ({ label, data }) => {\n  if (data === undefined) return null;\n\n  return (\n    <li className=\"country-details__item\">\n      <span className=\"highlighted\">{label}</span>\n      {data.map(language => language.name).join`, `}\n    </li>\n  );\n};\n\nexport default Languages;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Borders = ({ label, country, countries }) => {\n  if (country.borders === undefined) return null;\n\n  const listBorders = () => {\n    return country.borders.map(border => {\n      const borderCountry = countries.find(\n        country => country.alpha3Code === border\n      );\n      if (!borderCountry) return null;\n      return (\n        <Link\n          className=\"country-details_borderBtn btn\"\n          key={border}\n          to={`/details/${border}`}>\n          {borderCountry.name}\n        </Link>\n      );\n    });\n  };\n\n  return (\n    <div className=\"country-details__borders\">\n      <h3 className=\"highlighted\">{label}</h3>\n      <div className=\"country-details__buttons\">{listBorders()}</div>\n    </div>\n  );\n};\n\nexport default Borders;\n","import '../scss/CountryDetails.scss';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { solid } from '@fortawesome/fontawesome-svg-core/import.macro';\n\nimport { fetchCountries } from '../../actions';\nimport Loader from '../CountriesList/Loader';\nimport Detail from './Detail';\nimport TopLevelDomain from './TopLevelDomain';\nimport Currencies from './Currencies';\nimport Languages from './Languages';\nimport Borders from './Borders';\n\nconst CountryDetails = props => {\n  const { fetchCountries, country, countries } = props;\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    fetchCountries();\n  }, [fetchCountries]);\n\n  const renderContent = () => {\n    if (country === undefined || countries === undefined) return <Loader />;\n\n    const population = `${country.population}`.replace(\n      /(\\d)(?=(\\d\\d\\d)+(?!\\d))/g,\n      '$1,'\n    );\n\n    return (\n      <>\n        <button\n          onClick={props.history.goBack}\n          className=\"country-details__backBtn btn\">\n          <FontAwesomeIcon icon={solid('arrow-left')} className=\"icon\" />\n          Back\n        </button>\n\n        <div className=\"row\">\n          <div className=\"country-details__flag\">\n            {isLoaded ? null : <Loader />}\n            <img\n              onLoad={() => setIsLoaded(true)}\n              src={country.flag}\n              style={isLoaded ? {} : { display: 'none' }}\n              alt={`${country.name} flag`}\n            />\n          </div>\n\n          <div className=\"country-details__informations\">\n            <h2 className=\"country-details__name\">{country.name}</h2>\n            <div className=\"col\">\n              <ul className=\"country-details__list\">\n                <Detail label={'Native Name: '} data={country.nativeName} />\n                <Detail label={'Population: '} data={population} />\n                <Detail label={'Region: '} data={country.region} />\n                <Detail label={'Sub Region: '} data={country.subregion} />\n                <Detail label={'Capital: '} data={country.capital} />\n              </ul>\n              <ul className=\"country-details__list\">\n                <TopLevelDomain\n                  label={'Top Level Domain: '}\n                  data={country.topLevelDomain}\n                />\n                <Currencies label=\"Currencies: \" data={country.currencies} />\n                <Languages label=\"Languages: \" data={country.languages} />\n              </ul>\n            </div>\n            <Borders\n              label=\"Border Countries: \"\n              country={country}\n              countries={countries}\n            />\n          </div>\n        </div>\n      </>\n    );\n  };\n\n  return <main className=\"country-details\">{renderContent()}</main>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    country: state.countries[ownProps.match.params.id],\n    countries: Object.values(state.countries),\n  };\n};\n\nexport default connect(mapStateToProps, { fetchCountries })(CountryDetails);\n","import './scss/App.scss';\nimport React, { useEffect, useState } from 'react';\nimport { Switch, Router, Route } from 'react-router-dom';\nimport history from '../history';\n\nimport Header from './Header';\nimport CountriesList from './CountriesList/';\nimport CountryDetails from './CountryDetails';\n\nconst App = () => {\n  const [theme, setTheme] = useState(false);\n\n  useEffect(() => {\n    setTheme(window.matchMedia('(prefers-color-scheme: light)').matches);\n  }, []);\n\n  const containerClassName = theme ? 'light-theme' : 'dark-theme';\n\n  return (\n    <div className={`container ${containerClassName}`}>\n      <div className=\"wrapper\">\n        <Router history={history}>\n          <Header theme={theme} setTheme={setTheme} />\n          <Switch>\n            <Route path=\"/\" exact component={CountriesList} />\n            <Route path=\"/details/:id\" exact component={CountryDetails} />\n          </Switch>\n        </Router>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { FETCH_COUNTRIES } from '../actions/types';\nimport _ from 'lodash';\n\nconst countryReducer = (state = [], action) => {\n  switch (action.type) {\n    case FETCH_COUNTRIES:\n      return { ...state, ..._.mapKeys(action.payload, 'alpha3Code') };\n    default:\n      return state;\n  }\n};\n\nexport default countryReducer;\n","import { SET_TERM } from '../actions/types';\n\nconst termReducer = (state = '', action) => {\n  switch (action.type) {\n    case SET_TERM:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default termReducer;\n","import { SELECT_REGION } from '../actions/types';\n\nconst selectedReducer = (state = {}, action) => {\n  switch (action.type) {\n    case SELECT_REGION:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default selectedReducer;\n","import { RESET_RENDERED, SET_RENDERED } from '../actions/types';\n\nconst renderedReducer = (state = 20, action) => {\n  switch (action.type) {\n    case SET_RENDERED:\n      return state + action.payload;\n    case RESET_RENDERED:\n      return (state = 20);\n    default:\n      return state;\n  }\n};\n\nexport default renderedReducer;\n","import { combineReducers } from 'redux';\nimport countryReducer from './countryReducer';\nimport termReducer from './termReducer';\nimport selectedReducer from './selectedReducer';\nimport renderedReducer from './renderedReducer';\n\nexport default combineReducers({\n  countries: countryReducer,\n  term: termReducer,\n  selectedRegion: selectedReducer,\n  rendered: renderedReducer,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst composeEnchancers =\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducers,\n  composeEnchancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}