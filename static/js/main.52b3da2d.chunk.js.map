{"version":3,"sources":["history.js","components/Header.js","apis/restCountries.js","actions/types.js","components/CountriesList/SearchInput.js","actions/index.js","components/CountriesList/Dropdown.js","components/CountriesList/Loader.js","components/CountriesList/CountryCard.js","components/CountriesList/index.js","components/CountryDetails.js","components/App.js","reducers/countryReducer.js","reducers/termReducer.js","reducers/selectedReducer.js","reducers/renderedReducer.js","reducers/index.js","index.js"],"names":["createBrowserHistory","Header","props","className","to","onClick","setTheme","theme","icon","restCountries","axios","create","baseURL","FETCH_COUNTRIES","FETCH_COUNTRY","SET_TERM","SELECT_REGION","SET_RENDERED","RESET_RENDERED","connect","state","term","setTerm","type","payload","htmlFor","autoComplete","id","onChange","e","target","value","placeholder","regions","name","selectedRegion","selectRegion","selected","resetRendered","useState","active","setActive","showDropdown","ref","useRef","useEffect","onBodyClick","current","contains","document","body","addEventListener","capture","removeEventListener","tabIndex","onKeyPress","key","map","region","i","Loader","CountryCard","data","isLoaded","setLoaded","population","replace","alpha3Code","style","width","height","onLoad","display","src","flags","alt","continent","capital","countries","Object","values","rendered","fetchCountries","dispatch","a","get","setRendered","addition","footerRef","handleScroll","window","scrollY","innerHeight","offsetTop","length","result","filter","country","toLowerCase","includes","slice","numericCode","renderCards","padding","ownProps","match","params","fetchCountry","code","App","matchMedia","matches","containerClassName","history","path","exact","component","CountriesList","CountryDetails","countryReducer","action","alpha2Code","_","mapKeys","termReducer","selectedReducer","renderedReducer","combineReducers","composeEnchancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.52b3da2d.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import './scss/Header.scss';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { solid } from '@fortawesome/fontawesome-svg-core/import.macro';\n\nconst Header = props => {\n  const renderButtonText = () => {\n    if (props.theme) {\n      return (\n        <>\n          <FontAwesomeIcon icon={solid('moon')} />\n          Dark Mode\n        </>\n      );\n    } else if (!props.theme) {\n      return (\n        <>\n          <FontAwesomeIcon icon={solid('sun')} />\n          Light Mode\n        </>\n      );\n    }\n  };\n\n  return (\n    <header className=\"header\">\n      <div className=\"wrapper\">\n        <Link to=\"/\" className=\"header__logo\">\n          Where in the world?\n        </Link>\n        <button\n          onClick={() => props.setTheme(!props.theme)}\n          className=\"header__theme-switch\">\n          {renderButtonText()}\n        </button>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import axios from 'axios';\n\nconst restCountries = axios.create({ baseURL: 'https://restcountries.com/v2' });\n\nexport default restCountries;\n","export const FETCH_COUNTRIES = 'FETCH_COUNTRIES';\nexport const FETCH_COUNTRY = 'FETCH_COUNTRY';\nexport const SET_TERM = 'SET_TERM';\nexport const SELECT_REGION = 'SELECT_REGION';\nexport const SET_RENDERED = 'SET_RENDERED';\nexport const RESET_RENDERED = 'RESET_RENDERED';\n","import '../scss/SearchInput.scss';\nimport React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { solid } from '@fortawesome/fontawesome-svg-core/import.macro';\n\nimport { connect } from 'react-redux';\nimport { setTerm } from '../../actions';\n\nconst SearchInput = ({ term, setTerm }) => {\n  return (\n    <div className=\"search-input\">\n      <label htmlFor=\"input\">\n        <FontAwesomeIcon className=\"icon\" icon={solid('search')} />\n      </label>\n      <input\n        autoComplete=\"off\"\n        id=\"input\"\n        onChange={e => setTerm(e.target.value)}\n        placeholder={'Search for a country...'}\n        value={term}\n        type=\"text\"\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return { term: state.term };\n};\n\nexport default connect(mapStateToProps, { setTerm })(SearchInput);\n","import restCountries from '../apis/restCountries';\nimport {\n  FETCH_COUNTRY,\n  FETCH_COUNTRIES,\n  SET_TERM,\n  SELECT_REGION,\n  SET_RENDERED,\n  RESET_RENDERED,\n} from './types';\n\nexport const fetchCountry = code => async dispatch => {\n  const { data } = await restCountries.get(`/alpha/${code}`);\n\n  return dispatch({ type: FETCH_COUNTRY, payload: data });\n};\n\nexport const fetchCountries = () => async dispatch => {\n  const { data } = await restCountries.get('/all');\n\n  return dispatch({ type: FETCH_COUNTRIES, payload: data });\n};\n\nexport const setTerm = term => {\n  return { type: SET_TERM, payload: term };\n};\n\nexport const selectRegion = selected => {\n  return { type: SELECT_REGION, payload: selected };\n};\n\nexport const setRendered = addition => {\n  return { type: SET_RENDERED, payload: addition };\n};\n\nexport const resetRendered = () => {\n  return { type: RESET_RENDERED };\n};\n","import '../scss/Dropdown.scss';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { solid } from '@fortawesome/fontawesome-svg-core/import.macro';\nimport { connect } from 'react-redux';\nimport { selectRegion, resetRendered } from '../../actions';\n\nconst regions = [\n  { name: 'Filter by Region', value: '' },\n  { name: 'Africa', value: 'Africa' },\n  { name: 'America', value: 'Americas' },\n  { name: 'Asia', value: 'Asia' },\n  { name: 'Europe', value: 'Europe' },\n  { name: 'Oceania', value: 'Oceania' },\n];\n\nconst Dropdown = ({ selectedRegion, selectRegion, resetRendered }) => {\n  const [active, setActive] = useState(false);\n  const showDropdown = active ? 'active' : '';\n  const ref = useRef();\n\n  useEffect(() => {\n    const onBodyClick = e => {\n      if (ref.current.contains(e.target)) {\n        return;\n      }\n\n      setActive(false);\n    };\n\n    selectRegion(regions[0]);\n    document.body.addEventListener('click', onBodyClick, { capture: true });\n\n    return () => {\n      document.body.removeEventListener('click', onBodyClick, {\n        capture: true,\n      });\n    };\n  }, [selectRegion]);\n\n  const renderList = () => {\n    return regions.map((region, i) => {\n      if (region.value === selectedRegion.value) return null;\n      return (\n        <li\n          tabIndex=\"0\"\n          onKeyPress={e => {\n            if (e.key === 'Enter') {\n              selectRegion(region);\n              resetRendered();\n            }\n          }}\n          onClick={() => {\n            selectRegion(region);\n            resetRendered();\n          }}\n          key={i}\n          className=\"dropdown__item\">\n          {region.name}\n        </li>\n      );\n    });\n  };\n\n  return (\n    <div\n      tabIndex=\"0\"\n      ref={ref}\n      onKeyPress={e => (e.key === 'Enter' ? setActive(!active) : null)}\n      onClick={() => setActive(!active)}\n      className={`dropdown ${showDropdown}`}>\n      <div className=\"dropdown__text\">\n        {selectedRegion.name}\n        <FontAwesomeIcon className=\"icon\" icon={solid('angle-down')} />\n      </div>\n      <ul className={`dropdown__list`}>{renderList()}</ul>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return { selectedRegion: state.selectedRegion };\n};\n\nexport default connect(mapStateToProps, { selectRegion, resetRendered })(\n  Dropdown\n);\n","import '../scss/Loader.scss';\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { solid } from '@fortawesome/fontawesome-svg-core/import.macro';\n\nconst Loader = () => {\n  return (\n    <div className=\"loader__container\">\n      <FontAwesomeIcon icon={solid('circle-notch')} className=\"loader\" />\n    </div>\n  );\n};\n\nexport default Loader;\n","import '../scss/CountryCard.scss';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Loader from './Loader';\n\nconst CountryCard = ({ data }) => {\n  const [isLoaded, setLoaded] = useState(false);\n\n  const population = `${data.population}`.replace(\n    /(\\d)(?=(\\d\\d\\d)+(?!\\d))/g,\n    '$1,'\n  );\n\n  return (\n    <div className=\"country-card\">\n      <Link\n        tabIndex=\"-1\"\n        to={`/details/${data.alpha3Code}`}\n        className=\"country-card__flag\">\n        {isLoaded ? null : (\n          <Loader style={{ width: '250px', height: '166px' }} />\n        )}\n        <img\n          onLoad={() => setLoaded(!isLoaded)}\n          style={isLoaded ? {} : { display: 'none' }}\n          src={data.flags[1]}\n          alt={`${data.name} flag`}\n        />\n      </Link>\n\n      <div className=\"country-card__informations\">\n        <Link to={`/details/${data.alpha3Code}`} className=\"country-card__name\">\n          {data.name}\n        </Link>\n        <p className=\"country-card__information\">\n          <span className=\"country-card__prefix\">Population: </span>\n          {population}\n        </p>\n        <p className=\"country-card__information\">\n          <span className=\"country-card__prefix\">Region: </span>\n          {data.continent}\n        </p>\n        <p className=\"country-card__information\">\n          <span className=\"country-card__prefix\">Capital: </span>\n          {data.capital}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default CountryCard;\n","import '../scss/CountriesList.scss';\nimport React, { useEffect, useRef } from 'react';\nimport SearchInput from './SearchInput';\nimport Dropdown from './Dropdown';\nimport CountryCard from './CountryCard';\n\nimport { connect } from 'react-redux';\nimport { fetchCountries, setRendered } from '../../actions';\nimport Loader from './Loader';\n\nconst CountriesList = props => {\n  const { fetchCountries, setRendered, rendered } = props;\n  const footerRef = useRef();\n\n  useEffect(() => {\n    fetchCountries();\n  }, [fetchCountries]);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (!footerRef.current) return;\n\n      if (window.scrollY + window.innerHeight >= footerRef.current.offsetTop) {\n        if (rendered < 248) setRendered(19);\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [rendered, setRendered]);\n\n  const renderCards = () => {\n    const { countries, term, selectedRegion } = props;\n\n    if (!countries.length) {\n      return <Loader />;\n    }\n\n    let result = countries;\n    if (selectedRegion.value.length && term.length) {\n      result = countries.filter(\n        country =>\n          country.continent === selectedRegion.value &&\n          country.name.toLowerCase().includes(term.toLowerCase())\n      );\n    } else if (selectedRegion.value.length) {\n      result = countries.filter(\n        country => country.continent === selectedRegion.value\n      );\n    } else if (term.length) {\n      result = countries.filter(country =>\n        country.name.toLowerCase().includes(term.toLowerCase())\n      );\n    }\n    return result.slice(0, rendered).map(country => {\n      return <CountryCard key={country.numericCode} data={country} />;\n    });\n  };\n\n  return (\n    <div className=\"countries-list\">\n      <div className=\"countries-list__menu\">\n        <SearchInput />\n        <Dropdown />\n      </div>\n      <div className=\"countries-list__content\">{renderCards()}</div>\n      <footer ref={footerRef} style={{ padding: '2em' }}></footer>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    countries: Object.values(state.countries),\n    term: state.term,\n    selectedRegion: state.selectedRegion,\n    rendered: state.rendered,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchCountries, setRendered })(\n  CountriesList\n);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCountry } from '../actions';\n\nconst CountryDetails = props => {\n  const { fetchCountry } = props;\n  const { id } = props.match.params;\n\n  useEffect(() => {\n    fetchCountry(id);\n  }, [fetchCountry, id]);\n\n  return <div>CountryDetails</div>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return { countries: state.countries[ownProps.match.params.id] };\n};\n\nexport default connect(mapStateToProps, { fetchCountry })(CountryDetails);\n","import './scss/App.scss';\nimport React, { useEffect, useState } from 'react';\nimport { Switch, Router, Route } from 'react-router-dom';\nimport history from '../history';\n\nimport Header from './Header';\nimport CountriesList from './CountriesList/';\nimport CountryDetails from './CountryDetails';\n\nconst App = () => {\n  const [theme, setTheme] = useState(false);\n\n  useEffect(() => {\n    setTheme(window.matchMedia('(prefers-color-scheme: light)').matches);\n  }, []);\n\n  const containerClassName = theme ? 'light-theme' : 'dark-theme';\n\n  return (\n    <div className={`container ${containerClassName}`}>\n      <div className=\"wrapper\">\n        <Router history={history}>\n          <Header theme={theme} setTheme={setTheme} />\n          <Switch>\n            <Route\n              path=\"/fem-rest-api-countries/\"\n              exact\n              component={CountriesList}\n            />\n            <Route\n              path=\"/fem-rest-api-countries/details/:id\"\n              exact\n              component={CountryDetails}\n            />\n          </Switch>\n        </Router>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { FETCH_COUNTRY, FETCH_COUNTRIES } from '../actions/types';\nimport _ from 'lodash';\n\nconst countryReducer = (state = {}, action) => {\n  switch (action.type) {\n    case FETCH_COUNTRY:\n      return { ...state, [action.payload.alpha2Code]: action.payload };\n    case FETCH_COUNTRIES:\n      return { ...state, ..._.mapKeys(action.payload, 'alpha2Code') };\n    default:\n      return state;\n  }\n};\n\nexport default countryReducer;\n","import { SET_TERM } from '../actions/types';\n\nconst termReducer = (state = '', action) => {\n  switch (action.type) {\n    case SET_TERM:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default termReducer;\n","import { SELECT_REGION } from '../actions/types';\n\nconst selectedReducer = (state = {}, action) => {\n  switch (action.type) {\n    case SELECT_REGION:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default selectedReducer;\n","import { RESET_RENDERED, SET_RENDERED } from '../actions/types';\n\nconst renderedReducer = (state = 20, action) => {\n  switch (action.type) {\n    case SET_RENDERED:\n      return state + action.payload;\n    case RESET_RENDERED:\n      return (state = 20);\n    default:\n      return state;\n  }\n};\n\nexport default renderedReducer;\n","import { combineReducers } from 'redux';\nimport countryReducer from './countryReducer';\nimport termReducer from './termReducer';\nimport selectedReducer from './selectedReducer';\nimport renderedReducer from './renderedReducer';\n\nexport default combineReducers({\n  countries: countryReducer,\n  term: termReducer,\n  selectedRegion: selectedReducer,\n  rendered: renderedReducer,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst composeEnchancers =\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducers,\n  composeEnchancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}